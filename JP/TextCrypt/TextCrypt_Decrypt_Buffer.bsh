import org.jasypt.util.text.BasicTextEncryptor;

void decryptBuffer() {
    String pw = buffer.getStringProperty("JP.TextCrypt.password");
    if (pw == null) {
        pw = Macros.input(view, "Password:");
        if (pw == null || pw.isEmpty())
            return;
        buffer.setProperty("JP.TextCrypt.password", pw);
    }
    boolean useSelection = textArea.getSelectionCount() == 1;
    String base64text = useSelection ? textArea.getSelectedText() : buffer.getText();
    // Remove all whitespace (including newlines)
    int n = base64text.length();
    StringBuilder sb = new StringBuilder(n);
    for (int i = 0; i < n; i++) {
        char c = base64text.charAt(i);
        if (!Character.isWhitespace(c))
            sb.append(c);
    }
    base64text = sb.toString();
    // Decrypt
    String plainText = null;
    try {
        BasicTextEncryptor textEncryptor = new BasicTextEncryptor();
        textEncryptor.setPassword(pw);
        plainText = textEncryptor.decrypt(base64text);
    } catch (Exception ex) {
        Macros.error(view, "Decryption failed! Jasypt doesn't say why.");
        return;
    }
    // Save password in buffer-local property
    buffer.setProperty("JP.TextCrypt.password", pw);
    // Replace buffer contents with decrypted text
    if (useSelection) {
        textArea.setSelectedText(plainText);
    } else {
        buffer.remove(0, buffer.getLength());
        buffer.insert(0, plainText);
        buffer.setDirty(false);
    }
}

decryptBuffer();
