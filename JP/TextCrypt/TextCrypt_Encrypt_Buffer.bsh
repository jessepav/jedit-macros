import org.jasypt.util.text.BasicTextEncryptor;

void encryptBuffer() {
    buffer.unsetProperty("JP.TextCrypt.password");  // just in case one was saved
    String pw = Macros.input(view, "Password:");
    if (pw == null || pw.isEmpty())
        return;
    boolean useSelection = textArea.getSelectionCount() == 1;
    String plainText = useSelection ? textArea.getSelectedText() : buffer.getText();
    String base64text = null;
    try {
        BasicTextEncryptor textEncryptor = new BasicTextEncryptor();
        textEncryptor.setPassword(pw);
        base64text = textEncryptor.encrypt(plainText);
    } catch (Exception ex) {
        Macros.error(view, "Encryption failed! Jasypt doesn't say why.");
        return;
    }
    // Wrap the base64text into 80-character lines
    int n = base64text.length();
    StringBuilder sb = new StringBuilder(n * 5/4);
    int col = 0;
    for (int i = 0; i < n; i++) {
        sb.append(base64text.charAt(i));
        if (++col == 80) {
            sb.append('\n');
            col = 0;
        }
    }
    base64text = sb.toString();
    // Replace plain text with encrypted text
    if (useSelection) {
        textArea.setSelectedText(base64text);
    } else {
        buffer.remove(0, buffer.getLength());
        buffer.insert(0, base64text);
    }
}

encryptBuffer();
