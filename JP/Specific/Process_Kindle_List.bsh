// Find the right place to start
int n = textArea.getLineCount();
int starting_line = 0;
for (int i = 0; i < n; i++) {
    if (textArea.getLineText(i).startsWith("-------------"))
    	starting_line = Math.min(n, i+1);
}
int starting_pos = textArea.getLineStartOffset(starting_line);

// Format
SearchAndReplace.setSearchString("^All Your Kindle Items$\\n");
SearchAndReplace.setReplaceString("");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.setWholeWord(false);
SearchAndReplace.setIgnoreCase(false);
SearchAndReplace.setRegexp(true);
SearchAndReplace.setSearchFileSet(new CurrentBufferSet());
SearchAndReplace.replaceAll(view);
SearchAndReplace.setSearchString("Title:\\s+(.*)$\\nAuthor:\\s+(.*)$\\nDate Acquired:\\s+(.*)$\\nRating:.*$\\n?");
SearchAndReplace.setBeanShellReplace(true);
SearchAndReplace.setReplaceString("{\nString first_author = _2.split(\",\")[0];\nString[] names = first_author.split(\" \");\nnames[names.length-1] + \" ||| \" + _2 + \" - \" + _1;\n}");
// Use the Escape_Selected_Text macro to convert to and from the quoted form above.
SearchAndReplace.replaceAll(view);

// Now we'll delete all the blank lines.
SearchAndReplace.setSearchString("^\\n");
SearchAndReplace.setReplaceString("");
SearchAndReplace.setBeanShellReplace(false);
SearchAndReplace.replace(view, buffer, starting_pos, textArea.getBufferLength());

// Delete the Kindle default reference material
SearchAndReplace.setSearchString("^(Amazon|Amazon.com|Account) .*\\n");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);

// Sort the buffer by the last name of the first author
textArea.setSelection(new Selection.Range(starting_pos, textArea.getBufferLength()));
TextToolsSorting.sortLines(textArea, false);
textArea.setCaretPosition(starting_pos);

// Delete the author's last name that we used as the sorting key
SearchAndReplace.setSearchString("^\\S+ \\|\\|\\| ");
SearchAndReplace.setReplaceString("");
SearchAndReplace.replaceAll(view);

// add a newline at the end of the file and before the first entry
textArea.setCaretPosition(textArea.getBufferLength());
textArea.setSelectedText("\n");
textArea.setCaretPosition(starting_pos);
textArea.setSelectedText("\n");
